TODO

1. scan file for debug names (starting at 4e56 - link a6), load into environment table (with tools)
2. address break, ^C break, etc - list reason *before* disasm line
4. ; commands - keep track of last address (;l to repeat...)

5. run until return? (t bits in csr?)

6. local variables (set/clear)
set identifier '=' expression
unset identifier

expression '(' expression ')' -> 16-bit offset.


stack dump?  any safe way to get the previous address (how many bytes for jsr?)

option for MPW 3.2 vs 3.5?
store as MPWVersion (standard shell variable)
CLibraries=$MPW:Libraries:CLibraries-$MPWVersion:




--trace-cpu:
- add support for global vars [?]
- improve MOVEM disassembly [?]

---

- --24 flag for non-32-bit clean code

- since code segments are loaded from a resource and the code may try to reload itself (ResourceByName), it really needs to be done via the emulated ResourceMgr/Memory Manager.

- ftrap_editor_tabs


- move time to OS::, add OS::Init to set start time global / ticks
- use alarm / ualarm to update ticks/ time global?

- duplicate / duplicate iigs replacement

- stdout -- convert macroman to utf8 on output?



Done
----
- rbreak/wbreak/rwbreak - break on memory access
- orca/c : symfile support.

- Use MM code for all memory allocs
- GetFileInfo -- create fake finderinfo record from extension. 
- check for stack range errors
- add memory manager code
- add stand-alone disasm utility
- log memory access to global vars
- --trace-cpu: add support for tool traps
- --trace-cpu: move trace-cpu code into a logger callback

- ftrap_delete
- if file doesn't exist, check in $MPW/Tools/

- include file w/ all global names
- include file w/ all os errors